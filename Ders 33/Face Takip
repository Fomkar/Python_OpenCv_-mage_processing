# -*- coding: utf-8 -*-
"""
Created on Mon Jul 12 08:39:35 2021

@author: Ömer Karagöz
"""
"""
Nesne Takibi Belirleme
Aynı nesneler arasındaki benzerlikleri farklı framelere eşleşme yapma 
"""
""""
-Meanshift (ortalama Kayma )
"""

import cv2
import numpy as np

#görüntü al
# image = cv2.imread("fistik.bmp")
cap = cv2.VideoCapture(0)

#bir tane frame oku
ret, frame = cap.read()

if ret == False:
    print("Uyarı")

#detection
face_cascade = cv2.CascadeClassifier("haarcascade_frontalface_default.xml")
face_rect = face_cascade.detectMultiScale(frame)

(face_x,face_y,w,h)= tuple(face_rect[0])
track_window = (face_x,face_y, w, h)

#regionof interest
roi = frame[face_y: face_y +h, face_x : face_x + w]
    
hsv_roi = cv2.cvtColor(roi, cv2.COLOR_BGR2HSV)

roi_hist = cv2.calcHist([hsv_roi], [0], None, [180], [0,180])
cv2.normalize(roi_hist, roi_hist,0,255,cv2.NORM_MINMAX)

#takip icin gerekli durdurma kriterleri
#count = hesaplanacak maksimum oge sayısı
#eps = degisiklik

term_crit = (cv2.TERM_CRITERIA_EPS | cv2.TERM_CRITERIA_COUNT, 5, 1)

while True:
    
    ret, frame = cap.read()
    frame=cv2.flip(frame,1)
    if ret:
        
        hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
 
        #histogram bir görüntüde bulmak için kullanıyoruz
        #pixsel karşılaştırma
        dst = cv2.calcBackProject([hsv], [0], roi_hist, [0,180], 1)
        
        ret,track_window = cv2.meanShift(dst, track_window, term_crit)

        x,y,w,h = track_window
        
        img2 = cv2.rectangle(frame, (x,y), (x+w,y+h), (0,0,255),5)
        
        cv2.imshow("Takip", img2)
        
        if cv2.waitKey(1) == ord("k"):break
        
cap.release()
cv2.destroyAllWindows()
